@page "/car-versions"
@using RentingAppFrontend.Models
@using RentingAppFrontend.Services
@inject ApiService ApiService
@inject AuthService AuthService

<h3>Dostępne Samochody</h3>

@if (showNotification)
{
    <div class="notification">
        Dodano do koszyka!
    </div>
}

<table>
    <thead>
        <tr>
            <th>Marka</th>
            <th>Model</th>
            <th>Cena za dzień</th>
            <th>Akcje</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var car in Cars)
        {
            <tr>
                <td>@car.Brand</td>
                <td>@car.Model</td>
                <td>@car.PricePerDay PLN</td>
                <td>
                    <button @onclick="() => AddToCart(car)">Rezerwuj</button>
                </td>
            </tr>
        }
    </tbody>
</table>

@code {
    private List<CarVersion> Cars = new();
    private bool showNotification = false;

    protected override async Task OnInitializedAsync()
    {
        Cars = await ApiService.GetCarVersionsAsync();
    }

    private void AddToCart(CarVersion car)
    {
        AuthService.AddToCart(car);
        showNotification = true;

        // Ukryj powiadomienie po 3 sekundach
        Task.Delay(3000).ContinueWith(_ => InvokeAsync(() => showNotification = false));

        Console.WriteLine($"Dodano do koszyka: {car.Brand} - {car.Model}");
    }
}
